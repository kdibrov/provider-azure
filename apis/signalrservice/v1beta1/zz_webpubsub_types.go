/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IdentityObservation struct {

	// The Principal ID associated with this Managed Service Identity.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// The Tenant ID associated with this Managed Service Identity.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type IdentityParameters struct {

	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Web PubSub.
	// +kubebuilder:validation:Optional
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this Web PubSub. Possible values are SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebPubsubLiveTraceObservation struct {
}

type WebPubsubLiveTraceParameters struct {

	// Whether the log category ConnectivityLogs is enabled? Defaults to true
	// +kubebuilder:validation:Optional
	ConnectivityLogsEnabled *bool `json:"connectivityLogsEnabled,omitempty" tf:"connectivity_logs_enabled,omitempty"`

	// Whether the live trace is enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Whether the log category HttpRequestLogs is enabled? Defaults to true
	// +kubebuilder:validation:Optional
	HTTPRequestLogsEnabled *bool `json:"httpRequestLogsEnabled,omitempty" tf:"http_request_logs_enabled,omitempty"`

	// Whether the log category MessagingLogs is enabled? Defaults to true
	// +kubebuilder:validation:Optional
	MessagingLogsEnabled *bool `json:"messagingLogsEnabled,omitempty" tf:"messaging_logs_enabled,omitempty"`
}

type WebPubsubObservation struct {
	ExternalIP *string `json:"externalIp,omitempty" tf:"external_ip,omitempty"`

	// The FQDN of the Web PubSub service.
	HostName *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// The ID of the Web PubSub service.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity []IdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// The publicly accessible port of the Web PubSub service which is designed for browser/client use.
	PublicPort *float64 `json:"publicPort,omitempty" tf:"public_port,omitempty"`

	// The publicly accessible port of the Web PubSub service which is designed for customer server side use.
	ServerPort *float64 `json:"serverPort,omitempty" tf:"server_port,omitempty"`

	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type WebPubsubParameters struct {

	// Whether to enable AAD auth? Defaults to true.
	// +kubebuilder:validation:Optional
	AADAuthEnabled *bool `json:"aadAuthEnabled,omitempty" tf:"aad_auth_enabled,omitempty"`

	// Specifies the number of units associated with this Web PubSub resource. Valid values are: Free: 1, Standard: 1, 2, 5, 10, 20, 50, 100.
	// +kubebuilder:validation:Optional
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity []IdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// A live_trace block as defined below.
	// +kubebuilder:validation:Optional
	LiveTrace []WebPubsubLiveTraceParameters `json:"liveTrace,omitempty" tf:"live_trace,omitempty"`

	// Whether to enable local auth? Defaults to true.
	// +kubebuilder:validation:Optional
	LocalAuthEnabled *bool `json:"localAuthEnabled,omitempty" tf:"local_auth_enabled,omitempty"`

	// Specifies the supported Azure location where the Web PubSub service exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// The name of the Web PubSub service. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Whether to enable public network access? Defaults to true.
	// +kubebuilder:validation:Optional
	PublicNetworkAccessEnabled *bool `json:"publicNetworkAccessEnabled,omitempty" tf:"public_network_access_enabled,omitempty"`

	// The name of the resource group in which to create the Web PubSub service. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// Specifies which SKU to use. Possible values are Free_F1 and Standard_S1.
	// +kubebuilder:validation:Required
	Sku *string `json:"sku" tf:"sku,omitempty"`

	// Whether to request client certificate during TLS handshake? Defaults to false.
	// +kubebuilder:validation:Optional
	TLSClientCertEnabled *bool `json:"tlsClientCertEnabled,omitempty" tf:"tls_client_cert_enabled,omitempty"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// WebPubsubSpec defines the desired state of WebPubsub
type WebPubsubSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebPubsubParameters `json:"forProvider"`
}

// WebPubsubStatus defines the observed state of WebPubsub.
type WebPubsubStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebPubsubObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WebPubsub is the Schema for the WebPubsubs API. Manages an Azure Web PubSub service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type WebPubsub struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WebPubsubSpec   `json:"spec"`
	Status            WebPubsubStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebPubsubList contains a list of WebPubsubs
type WebPubsubList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebPubsub `json:"items"`
}

// Repository type metadata.
var (
	WebPubsub_Kind             = "WebPubsub"
	WebPubsub_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebPubsub_Kind}.String()
	WebPubsub_KindAPIVersion   = WebPubsub_Kind + "." + CRDGroupVersion.String()
	WebPubsub_GroupVersionKind = CRDGroupVersion.WithKind(WebPubsub_Kind)
)

func init() {
	SchemeBuilder.Register(&WebPubsub{}, &WebPubsubList{})
}
