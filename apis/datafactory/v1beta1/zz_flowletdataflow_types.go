/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FlowletDataFlowObservation struct {

	// The ID of the Data Factory Flowlet Data Flow.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type FlowletDataFlowParameters struct {

	// List of tags that can be used for describing the Data Factory Flowlet Data Flow.
	// +kubebuilder:validation:Optional
	Annotations []*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// The ID of Data Factory in which to associate the Data Flow with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	DataFactoryID *string `json:"dataFactoryId,omitempty" tf:"data_factory_id,omitempty"`

	// Reference to a Factory in datafactory to populate dataFactoryId.
	// +kubebuilder:validation:Optional
	DataFactoryIDRef *v1.Reference `json:"dataFactoryIdRef,omitempty" tf:"-"`

	// Selector for a Factory in datafactory to populate dataFactoryId.
	// +kubebuilder:validation:Optional
	DataFactoryIDSelector *v1.Selector `json:"dataFactoryIdSelector,omitempty" tf:"-"`

	// The description for the Data Factory Flowlet Data Flow.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The folder that this Data Flow is in. If not specified, the Data Flow will appear at the
	// root level.
	// +kubebuilder:validation:Optional
	Folder *string `json:"folder,omitempty" tf:"folder,omitempty"`

	// The script for the Data Factory Flowlet Data Flow.
	// +kubebuilder:validation:Optional
	Script *string `json:"script,omitempty" tf:"script,omitempty"`

	// The script lines for the Data Factory Flowlet Data Flow.
	// +kubebuilder:validation:Optional
	ScriptLines []*string `json:"scriptLines,omitempty" tf:"script_lines,omitempty"`

	// One or more sink blocks as defined below.
	// +kubebuilder:validation:Required
	Sink []FlowletDataFlowSinkParameters `json:"sink" tf:"sink,omitempty"`

	// One or more source blocks as defined below.
	// +kubebuilder:validation:Required
	Source []FlowletDataFlowSourceParameters `json:"source" tf:"source,omitempty"`

	// One or more transformation blocks as defined below.
	// +kubebuilder:validation:Optional
	Transformation []FlowletDataFlowTransformationParameters `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type FlowletDataFlowSinkLinkedServiceObservation struct {
}

type FlowletDataFlowSinkLinkedServiceParameters struct {

	// The name for the Data Flow transformation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.LinkedCustomService
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a LinkedCustomService in datafactory to populate name.
	// +kubebuilder:validation:Optional
	NameRef *v1.Reference `json:"nameRef,omitempty" tf:"-"`

	// Selector for a LinkedCustomService in datafactory to populate name.
	// +kubebuilder:validation:Optional
	NameSelector *v1.Selector `json:"nameSelector,omitempty" tf:"-"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FlowletDataFlowSinkObservation struct {
}

type FlowletDataFlowSinkParameters struct {

	// A dataset block as defined below.
	// +kubebuilder:validation:Optional
	DataSet []SinkDataSetParameters `json:"dataset,omitempty" tf:"dataset,omitempty"`

	// The description for the Data Flow Source.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A flowlet block as defined below.
	// +kubebuilder:validation:Optional
	Flowlet []SinkFlowletParameters `json:"flowlet,omitempty" tf:"flowlet,omitempty"`

	// A linked_service block as defined below.
	// +kubebuilder:validation:Optional
	LinkedService []FlowletDataFlowSinkLinkedServiceParameters `json:"linkedService,omitempty" tf:"linked_service,omitempty"`

	// The name for the Data Flow Source.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A rejected_linked_service block as defined below.
	// +kubebuilder:validation:Optional
	RejectedLinkedService []SinkRejectedLinkedServiceParameters `json:"rejectedLinkedService,omitempty" tf:"rejected_linked_service,omitempty"`

	// A schema_linked_service block as defined below.
	// +kubebuilder:validation:Optional
	SchemaLinkedService []SinkSchemaLinkedServiceParameters `json:"schemaLinkedService,omitempty" tf:"schema_linked_service,omitempty"`
}

type FlowletDataFlowSourceDataSetObservation struct {
}

type FlowletDataFlowSourceDataSetParameters struct {

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FlowletDataFlowSourceFlowletObservation struct {
}

type FlowletDataFlowSourceFlowletParameters struct {

	// Specifies the reference data flow parameters from dataset.
	// +kubebuilder:validation:Optional
	DataSetParameters *string `json:"datasetParameters,omitempty" tf:"dataset_parameters,omitempty"`

	// The name for the Data Flow transformation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.FlowletDataFlow
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a FlowletDataFlow in datafactory to populate name.
	// +kubebuilder:validation:Optional
	NameRef *v1.Reference `json:"nameRef,omitempty" tf:"-"`

	// Selector for a FlowletDataFlow in datafactory to populate name.
	// +kubebuilder:validation:Optional
	NameSelector *v1.Selector `json:"nameSelector,omitempty" tf:"-"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FlowletDataFlowSourceLinkedServiceObservation struct {
}

type FlowletDataFlowSourceLinkedServiceParameters struct {

	// The name for the Data Flow transformation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.LinkedCustomService
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a LinkedCustomService in datafactory to populate name.
	// +kubebuilder:validation:Optional
	NameRef *v1.Reference `json:"nameRef,omitempty" tf:"-"`

	// Selector for a LinkedCustomService in datafactory to populate name.
	// +kubebuilder:validation:Optional
	NameSelector *v1.Selector `json:"nameSelector,omitempty" tf:"-"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FlowletDataFlowSourceObservation struct {
}

type FlowletDataFlowSourceParameters struct {

	// A dataset block as defined below.
	// +kubebuilder:validation:Optional
	DataSet []FlowletDataFlowSourceDataSetParameters `json:"dataset,omitempty" tf:"dataset,omitempty"`

	// The description for the Data Flow Source.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A flowlet block as defined below.
	// +kubebuilder:validation:Optional
	Flowlet []FlowletDataFlowSourceFlowletParameters `json:"flowlet,omitempty" tf:"flowlet,omitempty"`

	// A linked_service block as defined below.
	// +kubebuilder:validation:Optional
	LinkedService []FlowletDataFlowSourceLinkedServiceParameters `json:"linkedService,omitempty" tf:"linked_service,omitempty"`

	// The name for the Data Flow Source.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A rejected_linked_service block as defined below.
	// +kubebuilder:validation:Optional
	RejectedLinkedService []FlowletDataFlowSourceRejectedLinkedServiceParameters `json:"rejectedLinkedService,omitempty" tf:"rejected_linked_service,omitempty"`

	// A schema_linked_service block as defined below.
	// +kubebuilder:validation:Optional
	SchemaLinkedService []FlowletDataFlowSourceSchemaLinkedServiceParameters `json:"schemaLinkedService,omitempty" tf:"schema_linked_service,omitempty"`
}

type FlowletDataFlowSourceRejectedLinkedServiceObservation struct {
}

type FlowletDataFlowSourceRejectedLinkedServiceParameters struct {

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FlowletDataFlowSourceSchemaLinkedServiceObservation struct {
}

type FlowletDataFlowSourceSchemaLinkedServiceParameters struct {

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FlowletDataFlowTransformationDataSetObservation struct {
}

type FlowletDataFlowTransformationDataSetParameters struct {

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FlowletDataFlowTransformationFlowletObservation struct {
}

type FlowletDataFlowTransformationFlowletParameters struct {

	// Specifies the reference data flow parameters from dataset.
	// +kubebuilder:validation:Optional
	DataSetParameters *string `json:"datasetParameters,omitempty" tf:"dataset_parameters,omitempty"`

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FlowletDataFlowTransformationLinkedServiceObservation struct {
}

type FlowletDataFlowTransformationLinkedServiceParameters struct {

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type FlowletDataFlowTransformationObservation struct {
}

type FlowletDataFlowTransformationParameters struct {

	// A dataset block as defined below.
	// +kubebuilder:validation:Optional
	DataSet []FlowletDataFlowTransformationDataSetParameters `json:"dataset,omitempty" tf:"dataset,omitempty"`

	// The description for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A flowlet block as defined below.
	// +kubebuilder:validation:Optional
	Flowlet []FlowletDataFlowTransformationFlowletParameters `json:"flowlet,omitempty" tf:"flowlet,omitempty"`

	// A linked_service block as defined below.
	// +kubebuilder:validation:Optional
	LinkedService []FlowletDataFlowTransformationLinkedServiceParameters `json:"linkedService,omitempty" tf:"linked_service,omitempty"`

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type SinkDataSetObservation struct {
}

type SinkDataSetParameters struct {

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SinkFlowletObservation struct {
}

type SinkFlowletParameters struct {

	// Specifies the reference data flow parameters from dataset.
	// +kubebuilder:validation:Optional
	DataSetParameters *string `json:"datasetParameters,omitempty" tf:"dataset_parameters,omitempty"`

	// The name for the Data Flow transformation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.FlowletDataFlow
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a FlowletDataFlow in datafactory to populate name.
	// +kubebuilder:validation:Optional
	NameRef *v1.Reference `json:"nameRef,omitempty" tf:"-"`

	// Selector for a FlowletDataFlow in datafactory to populate name.
	// +kubebuilder:validation:Optional
	NameSelector *v1.Selector `json:"nameSelector,omitempty" tf:"-"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SinkRejectedLinkedServiceObservation struct {
}

type SinkRejectedLinkedServiceParameters struct {

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SinkSchemaLinkedServiceObservation struct {
}

type SinkSchemaLinkedServiceParameters struct {

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

// FlowletDataFlowSpec defines the desired state of FlowletDataFlow
type FlowletDataFlowSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FlowletDataFlowParameters `json:"forProvider"`
}

// FlowletDataFlowStatus defines the observed state of FlowletDataFlow.
type FlowletDataFlowStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FlowletDataFlowObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FlowletDataFlow is the Schema for the FlowletDataFlows API. Manages a Flowlet Data Flow inside an Azure Data Factory.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type FlowletDataFlow struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FlowletDataFlowSpec   `json:"spec"`
	Status            FlowletDataFlowStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FlowletDataFlowList contains a list of FlowletDataFlows
type FlowletDataFlowList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FlowletDataFlow `json:"items"`
}

// Repository type metadata.
var (
	FlowletDataFlow_Kind             = "FlowletDataFlow"
	FlowletDataFlow_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FlowletDataFlow_Kind}.String()
	FlowletDataFlow_KindAPIVersion   = FlowletDataFlow_Kind + "." + CRDGroupVersion.String()
	FlowletDataFlow_GroupVersionKind = CRDGroupVersion.WithKind(FlowletDataFlow_Kind)
)

func init() {
	SchemeBuilder.Register(&FlowletDataFlow{}, &FlowletDataFlowList{})
}
