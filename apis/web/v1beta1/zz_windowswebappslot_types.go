/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionCustomActionObservation struct {
}

type ActionCustomActionParameters struct {

	// The executable to run for the custom_action.
	// +kubebuilder:validation:Required
	Executable *string `json:"executable" tf:"executable,omitempty"`

	// The parameters to pass to the specified executable.
	// +kubebuilder:validation:Optional
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`
}

type SiteConfigAutoHealSettingTriggerRequestsObservation struct {
}

type SiteConfigAutoHealSettingTriggerRequestsParameters struct {

	// The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.
	// +kubebuilder:validation:Required
	Count *float64 `json:"count" tf:"count,omitempty"`

	// The time interval in the form hh:mm:ss.
	// +kubebuilder:validation:Required
	Interval *string `json:"interval" tf:"interval,omitempty"`
}

type SiteConfigAutoHealSettingTriggerSlowRequestObservation struct {
}

type SiteConfigAutoHealSettingTriggerSlowRequestParameters struct {

	// The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.
	// +kubebuilder:validation:Required
	Count *float64 `json:"count" tf:"count,omitempty"`

	// The time interval in the form hh:mm:ss.
	// +kubebuilder:validation:Required
	Interval *string `json:"interval" tf:"interval,omitempty"`

	// The path to which this rule status code applies.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The threshold of time passed to qualify as a Slow Request in hh:mm:ss.
	// +kubebuilder:validation:Required
	TimeTaken *string `json:"timeTaken" tf:"time_taken,omitempty"`
}

type SiteConfigAutoHealSettingTriggerStatusCodeObservation struct {
}

type SiteConfigAutoHealSettingTriggerStatusCodeParameters struct {

	// The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.
	// +kubebuilder:validation:Required
	Count *float64 `json:"count" tf:"count,omitempty"`

	// The time interval in the form hh:mm:ss.
	// +kubebuilder:validation:Required
	Interval *string `json:"interval" tf:"interval,omitempty"`

	// The path to which this rule status code applies.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The status code for this rule, accepts single status codes and status code ranges. e.g. 500 or 400-499. Possible values are integers between 101 and 599
	// +kubebuilder:validation:Required
	StatusCodeRange *string `json:"statusCodeRange" tf:"status_code_range,omitempty"`

	// The Request Sub Status of the Status Code.
	// +kubebuilder:validation:Optional
	SubStatus *float64 `json:"subStatus,omitempty" tf:"sub_status,omitempty"`

	// The Win32 Status Code of the Request.
	// +kubebuilder:validation:Optional
	Win32Status *string `json:"win32Status,omitempty" tf:"win32_status,omitempty"`
}

type SiteConfigVirtualApplicationObservation struct {
}

type SiteConfigVirtualApplicationParameters struct {

	// The physical path for the Virtual Application.
	// +kubebuilder:validation:Required
	PhysicalPath *string `json:"physicalPath" tf:"physical_path,omitempty"`

	// Should pre-loading be enabled.
	// +kubebuilder:validation:Required
	Preload *bool `json:"preload" tf:"preload,omitempty"`

	// One or more virtual_directory blocks as defined below.
	// +kubebuilder:validation:Optional
	VirtualDirectory []VirtualApplicationVirtualDirectoryParameters `json:"virtualDirectory,omitempty" tf:"virtual_directory,omitempty"`

	// The Virtual Path for the Virtual Application.
	// +kubebuilder:validation:Required
	VirtualPath *string `json:"virtualPath" tf:"virtual_path,omitempty"`
}

type VirtualApplicationVirtualDirectoryObservation struct {
}

type VirtualApplicationVirtualDirectoryParameters struct {

	// The physical path for the Virtual Application.
	// +kubebuilder:validation:Optional
	PhysicalPath *string `json:"physicalPath,omitempty" tf:"physical_path,omitempty"`

	// The Virtual Path for the Virtual Application.
	// +kubebuilder:validation:Optional
	VirtualPath *string `json:"virtualPath,omitempty" tf:"virtual_path,omitempty"`
}

type WindowsWebAppSlotAuthSettingsActiveDirectoryObservation struct {
}

type WindowsWebAppSlotAuthSettingsActiveDirectoryParameters struct {

	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	// +kubebuilder:validation:Optional
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the Client to use to authenticate with Azure Active Directory.
	// +kubebuilder:validation:Required
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret.
	// The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`
}

type WindowsWebAppSlotAuthSettingsFacebookObservation struct {
}

type WindowsWebAppSlotAuthSettingsFacebookParameters struct {

	// The App ID of the Facebook app used for login.
	// The App ID of the Facebook app used for login.
	// +kubebuilder:validation:Required
	AppID *string `json:"appId" tf:"app_id,omitempty"`

	// The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name.
	// The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
	// +kubebuilder:validation:Optional
	AppSecretSecretRef *v1.SecretKeySelector `json:"appSecretSecretRef,omitempty" tf:"-"`

	// The app setting name that contains the app_secret value used for Facebook login. Cannot be specified with app_secret.
	// The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
	// +kubebuilder:validation:Optional
	AppSecretSettingName *string `json:"appSecretSettingName,omitempty" tf:"app_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, "wl.basic" is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsWebAppSlotAuthSettingsGithubObservation struct {
}

type WindowsWebAppSlotAuthSettingsGithubParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The ID of the GitHub app used for login.
	// +kubebuilder:validation:Required
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret.
	// The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, "wl.basic" is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsWebAppSlotAuthSettingsGoogleObservation struct {
}

type WindowsWebAppSlotAuthSettingsGoogleParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OpenID Connect Client ID for the Google web application.
	// +kubebuilder:validation:Required
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret.
	// The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, "wl.basic" is used as the default scope.
	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsWebAppSlotAuthSettingsMicrosoftObservation struct {
}

type WindowsWebAppSlotAuthSettingsMicrosoftParameters struct {

	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	// +kubebuilder:validation:Required
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.
	// The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret.
	// The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
	// +kubebuilder:validation:Optional
	ClientSecretSettingName *string `json:"clientSecretSettingName,omitempty" tf:"client_secret_setting_name,omitempty"`

	// Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, "wl.basic" is used as the default scope.
	// The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
	// +kubebuilder:validation:Optional
	OauthScopes []*string `json:"oauthScopes,omitempty" tf:"oauth_scopes,omitempty"`
}

type WindowsWebAppSlotAuthSettingsObservation struct {
}

type WindowsWebAppSlotAuthSettingsParameters struct {

	// An active_directory block as defined above.
	// +kubebuilder:validation:Optional
	ActiveDirectory []WindowsWebAppSlotAuthSettingsActiveDirectoryParameters `json:"activeDirectory,omitempty" tf:"active_directory,omitempty"`

	// Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	// Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
	// +kubebuilder:validation:Optional
	AdditionalLoginParameters map[string]*string `json:"additionalLoginParameters,omitempty" tf:"additional_login_parameters,omitempty"`

	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App Slot.
	// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
	// +kubebuilder:validation:Optional
	AllowedExternalRedirectUrls []*string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls,omitempty"`

	// The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github.
	// The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
	// +kubebuilder:validation:Optional
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider,omitempty"`

	// Should the Authentication / Authorization feature be enabled for the Windows Web App?
	// Should the Authentication / Authorization feature be enabled?
	// +kubebuilder:validation:Required
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// A facebook block as defined below.
	// +kubebuilder:validation:Optional
	Facebook []WindowsWebAppSlotAuthSettingsFacebookParameters `json:"facebook,omitempty" tf:"facebook,omitempty"`

	// A github block as defined below.
	// +kubebuilder:validation:Optional
	Github []WindowsWebAppSlotAuthSettingsGithubParameters `json:"github,omitempty" tf:"github,omitempty"`

	// A google block as defined below.
	// +kubebuilder:validation:Optional
	Google []WindowsWebAppSlotAuthSettingsGoogleParameters `json:"google,omitempty" tf:"google,omitempty"`

	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this Windows Web App Slot.
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens.
	// +kubebuilder:validation:Optional
	Issuer *string `json:"issuer,omitempty" tf:"issuer,omitempty"`

	// A microsoft block as defined below.
	// +kubebuilder:validation:Optional
	Microsoft []WindowsWebAppSlotAuthSettingsMicrosoftParameters `json:"microsoft,omitempty" tf:"microsoft,omitempty"`

	// The RuntimeVersion of the Authentication / Authorization feature in use for the Windows Web App Slot.
	// The RuntimeVersion of the Authentication / Authorization feature in use.
	// +kubebuilder:validation:Optional
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version,omitempty"`

	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
	// +kubebuilder:validation:Optional
	TokenRefreshExtensionHours *float64 `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours,omitempty"`

	// Should the Windows Web App Slot durably store platform-specific security tokens that are obtained during login flows? Defaults to false.
	// Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
	// +kubebuilder:validation:Optional
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled,omitempty"`

	// A twitter block as defined below.
	// +kubebuilder:validation:Optional
	Twitter []WindowsWebAppSlotAuthSettingsTwitterParameters `json:"twitter,omitempty" tf:"twitter,omitempty"`

	// The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.
	// The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
	// +kubebuilder:validation:Optional
	UnauthenticatedClientAction *string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action,omitempty"`
}

type WindowsWebAppSlotAuthSettingsTwitterObservation struct {
}

type WindowsWebAppSlotAuthSettingsTwitterParameters struct {

	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// +kubebuilder:validation:Required
	ConsumerKey *string `json:"consumerKey" tf:"consumer_key,omitempty"`

	// The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name.
	// The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
	// +kubebuilder:validation:Optional
	ConsumerSecretSecretRef *v1.SecretKeySelector `json:"consumerSecretSecretRef,omitempty" tf:"-"`

	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret.
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
	// +kubebuilder:validation:Optional
	ConsumerSecretSettingName *string `json:"consumerSecretSettingName,omitempty" tf:"consumer_secret_setting_name,omitempty"`
}

type WindowsWebAppSlotBackupObservation struct {

	// A schedule block as defined below.
	// +kubebuilder:validation:Required
	Schedule []WindowsWebAppSlotBackupScheduleObservation `json:"schedule,omitempty" tf:"schedule,omitempty"`
}

type WindowsWebAppSlotBackupParameters struct {

	// Should this backup job be enabled? Defaults to true.
	// Should this backup job be enabled?
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The name which should be used for this Backup.
	// The name which should be used for this Backup.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// A schedule block as defined below.
	// +kubebuilder:validation:Required
	Schedule []WindowsWebAppSlotBackupScheduleParameters `json:"schedule" tf:"schedule,omitempty"`

	// The SAS URL to the container.
	// The SAS URL to the container.
	// +kubebuilder:validation:Required
	StorageAccountURLSecretRef v1.SecretKeySelector `json:"storageAccountUrlSecretRef" tf:"-"`
}

type WindowsWebAppSlotBackupScheduleObservation struct {

	// The time the backup was last attempted.
	LastExecutionTime *string `json:"lastExecutionTime,omitempty" tf:"last_execution_time,omitempty"`
}

type WindowsWebAppSlotBackupScheduleParameters struct {

	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).
	// How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
	// +kubebuilder:validation:Required
	FrequencyInterval *float64 `json:"frequencyInterval" tf:"frequency_interval,omitempty"`

	// The unit of time for how often the backup should take place. Possible values include: Day, Hour
	// The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
	// +kubebuilder:validation:Required
	FrequencyUnit *string `json:"frequencyUnit" tf:"frequency_unit,omitempty"`

	// Should the service keep at least one backup, regardless of age of backup. Defaults to false.
	// Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
	// +kubebuilder:validation:Optional
	KeepAtLeastOneBackup *bool `json:"keepAtLeastOneBackup,omitempty" tf:"keep_at_least_one_backup,omitempty"`

	// After how many days backups should be deleted. Defaults to 30.
	// After how many days backups should be deleted.
	// +kubebuilder:validation:Optional
	RetentionPeriodDays *float64 `json:"retentionPeriodDays,omitempty" tf:"retention_period_days,omitempty"`

	// When the schedule should start working in RFC-3339 format.
	// When the schedule should start working in RFC-3339 format.
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`
}

type WindowsWebAppSlotConnectionStringObservation struct {
}

type WindowsWebAppSlotConnectionStringParameters struct {

	// The name which should be used for this Storage Account.
	// The name which should be used for this Connection.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Type of database. Possible values include: APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub, PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer.
	// Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`

	// The connection string value.
	// The connection string value.
	// +kubebuilder:validation:Required
	ValueSecretRef v1.SecretKeySelector `json:"valueSecretRef" tf:"-"`
}

type WindowsWebAppSlotIdentityObservation struct {

	// The Principal ID associated with this Managed Service Identity.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// The Tenant ID associated with this Managed Service Identity.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type WindowsWebAppSlotIdentityParameters struct {

	// A list of User Assigned Managed Identity IDs to be assigned to this Windows Web App Slot.
	// +kubebuilder:validation:Optional
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// Specifies the type of Managed Service Identity that should be configured on this Windows Web App Slot. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageObservation struct {
}

type WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageParameters struct {

	// The level at which to log. Possible values include Error, Warning, Information, Verbose and Off. NOTE: this field is not available for http_logs
	// +kubebuilder:validation:Required
	Level *string `json:"level" tf:"level,omitempty"`

	// The retention period in days. A values of 0 means no retention.
	// +kubebuilder:validation:Required
	RetentionInDays *float64 `json:"retentionInDays" tf:"retention_in_days,omitempty"`

	// SAS url to an Azure blob container with read/write/list/delete permissions.
	// +kubebuilder:validation:Required
	SASURL *string `json:"sasUrl" tf:"sas_url,omitempty"`
}

type WindowsWebAppSlotLogsApplicationLogsObservation struct {
}

type WindowsWebAppSlotLogsApplicationLogsParameters struct {

	// A azure_blob_storage block as defined above.
	// +kubebuilder:validation:Optional
	AzureBlobStorage []WindowsWebAppSlotLogsApplicationLogsAzureBlobStorageParameters `json:"azureBlobStorage,omitempty" tf:"azure_blob_storage,omitempty"`

	// Log level. Possible values include: Verbose, Information, Warning, and Error.
	// +kubebuilder:validation:Required
	FileSystemLevel *string `json:"fileSystemLevel" tf:"file_system_level,omitempty"`
}

type WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageObservation struct {
}

type WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageParameters struct {

	// The retention period in days. A values of 0 means no retention.
	// +kubebuilder:validation:Optional
	RetentionInDays *float64 `json:"retentionInDays,omitempty" tf:"retention_in_days,omitempty"`

	// SAS url to an Azure blob container with read/write/list/delete permissions.
	// +kubebuilder:validation:Required
	SASURLSecretRef v1.SecretKeySelector `json:"sasurlSecretRef" tf:"-"`
}

type WindowsWebAppSlotLogsHTTPLogsFileSystemObservation struct {
}

type WindowsWebAppSlotLogsHTTPLogsFileSystemParameters struct {

	// The retention period in days. A values of 0 means no retention.
	// +kubebuilder:validation:Required
	RetentionInDays *float64 `json:"retentionInDays" tf:"retention_in_days,omitempty"`

	// The maximum size in megabytes that log files can use.
	// +kubebuilder:validation:Required
	RetentionInMb *float64 `json:"retentionInMb" tf:"retention_in_mb,omitempty"`
}

type WindowsWebAppSlotLogsHTTPLogsObservation struct {
}

type WindowsWebAppSlotLogsHTTPLogsParameters struct {

	// A azure_blob_storage block as defined above.
	// +kubebuilder:validation:Optional
	AzureBlobStorage []WindowsWebAppSlotLogsHTTPLogsAzureBlobStorageParameters `json:"azureBlobStorage,omitempty" tf:"azure_blob_storage,omitempty"`

	// A file_system block as defined above.
	// +kubebuilder:validation:Optional
	FileSystem []WindowsWebAppSlotLogsHTTPLogsFileSystemParameters `json:"fileSystem,omitempty" tf:"file_system,omitempty"`
}

type WindowsWebAppSlotLogsObservation struct {
}

type WindowsWebAppSlotLogsParameters struct {

	// A application_logs block as defined above.
	// +kubebuilder:validation:Optional
	ApplicationLogs []WindowsWebAppSlotLogsApplicationLogsParameters `json:"applicationLogs,omitempty" tf:"application_logs,omitempty"`

	// Should detailed error messages be enabled.
	// +kubebuilder:validation:Optional
	DetailedErrorMessages *bool `json:"detailedErrorMessages,omitempty" tf:"detailed_error_messages,omitempty"`

	// Should failed request tracing be enabled.
	// +kubebuilder:validation:Optional
	FailedRequestTracing *bool `json:"failedRequestTracing,omitempty" tf:"failed_request_tracing,omitempty"`

	// An http_logs block as defined above.
	// +kubebuilder:validation:Optional
	HTTPLogs []WindowsWebAppSlotLogsHTTPLogsParameters `json:"httpLogs,omitempty" tf:"http_logs,omitempty"`
}

type WindowsWebAppSlotObservation struct {

	// A backup block as defined below.
	// +kubebuilder:validation:Optional
	Backup []WindowsWebAppSlotBackupObservation `json:"backup,omitempty" tf:"backup,omitempty"`

	// The default hostname of the Windows Web App Slot.
	DefaultHostName *string `json:"defaultHostname,omitempty" tf:"default_hostname,omitempty"`

	// The ID of the Windows Web App Slot.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity []WindowsWebAppSlotIdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// The Kind value for this Windows Web App Slot.
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// A list of outbound IP addresses - such as ["52.23.25.3", "52.143.43.12"]
	OutboundIPAddressList []*string `json:"outboundIpAddressList,omitempty" tf:"outbound_ip_address_list,omitempty"`

	// A comma separated list of outbound IP addresses - such as 52.23.25.3,52.143.43.12.
	OutboundIPAddresses *string `json:"outboundIpAddresses,omitempty" tf:"outbound_ip_addresses,omitempty"`

	// A possible_outbound_ip_address_list block as defined below.
	PossibleOutboundIPAddressList []*string `json:"possibleOutboundIpAddressList,omitempty" tf:"possible_outbound_ip_address_list,omitempty"`

	// A comma separated list of outbound IP addresses - such as 52.23.25.3,52.143.43.12,52.143.43.17 - not all of which are necessarily in use. Superset of outbound_ip_addresses.
	PossibleOutboundIPAddresses *string `json:"possibleOutboundIpAddresses,omitempty" tf:"possible_outbound_ip_addresses,omitempty"`

	// A site_config block as defined below.
	// +kubebuilder:validation:Required
	SiteConfig []WindowsWebAppSlotSiteConfigObservation `json:"siteConfig,omitempty" tf:"site_config,omitempty"`

	// A site_credential block as defined below.
	SiteCredential []WindowsWebAppSlotSiteCredentialObservation `json:"siteCredential,omitempty" tf:"site_credential,omitempty"`
}

type WindowsWebAppSlotParameters struct {

	// The ID of the Windows Web App this Deployment Slot will be part of. Changing this forces a new Windows Web App to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/web/v1beta1.WindowsWebApp
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	AppServiceID *string `json:"appServiceId,omitempty" tf:"app_service_id,omitempty"`

	// Reference to a WindowsWebApp in web to populate appServiceId.
	// +kubebuilder:validation:Optional
	AppServiceIDRef *v1.Reference `json:"appServiceIdRef,omitempty" tf:"-"`

	// Selector for a WindowsWebApp in web to populate appServiceId.
	// +kubebuilder:validation:Optional
	AppServiceIDSelector *v1.Selector `json:"appServiceIdSelector,omitempty" tf:"-"`

	// A map of key-value pairs of App Settings.
	// +kubebuilder:validation:Optional
	AppSettings map[string]*string `json:"appSettings,omitempty" tf:"app_settings,omitempty"`

	// A auth_settings block as defined below.
	// +kubebuilder:validation:Optional
	AuthSettings []WindowsWebAppSlotAuthSettingsParameters `json:"authSettings,omitempty" tf:"auth_settings,omitempty"`

	// A backup block as defined below.
	// +kubebuilder:validation:Optional
	Backup []WindowsWebAppSlotBackupParameters `json:"backup,omitempty" tf:"backup,omitempty"`

	// Should Client Affinity be enabled?
	// +kubebuilder:validation:Optional
	ClientAffinityEnabled *bool `json:"clientAffinityEnabled,omitempty" tf:"client_affinity_enabled,omitempty"`

	// Should Client Certificates be enabled?
	// +kubebuilder:validation:Optional
	ClientCertificateEnabled *bool `json:"clientCertificateEnabled,omitempty" tf:"client_certificate_enabled,omitempty"`

	// Paths to exclude when using client certificates, separated by ;
	// Paths to exclude when using client certificates, separated by ;
	// +kubebuilder:validation:Optional
	ClientCertificateExclusionPaths *string `json:"clientCertificateExclusionPaths,omitempty" tf:"client_certificate_exclusion_paths,omitempty"`

	// The Client Certificate mode. Possible values are Required, Optional, and OptionalInteractiveUser. This property has no effect when client_cert_enabled is false
	// +kubebuilder:validation:Optional
	ClientCertificateMode *string `json:"clientCertificateMode,omitempty" tf:"client_certificate_mode,omitempty"`

	// One or more connection_string blocks as defined below.
	// +kubebuilder:validation:Optional
	ConnectionString []WindowsWebAppSlotConnectionStringParameters `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// Should the Windows Web App Slot be enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Should the Windows Web App Slot require HTTPS connections.
	// +kubebuilder:validation:Optional
	HTTPSOnly *bool `json:"httpsOnly,omitempty" tf:"https_only,omitempty"`

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity []WindowsWebAppSlotIdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity
	// +kubebuilder:validation:Optional
	KeyVaultReferenceIdentityID *string `json:"keyVaultReferenceIdentityId,omitempty" tf:"key_vault_reference_identity_id,omitempty"`

	// A logs block as defined below.
	// +kubebuilder:validation:Optional
	Logs []WindowsWebAppSlotLogsParameters `json:"logs,omitempty" tf:"logs,omitempty"`

	// The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Web App will be used.
	// +kubebuilder:validation:Optional
	ServicePlanID *string `json:"servicePlanId,omitempty" tf:"service_plan_id,omitempty"`

	// A site_config block as defined below.
	// +kubebuilder:validation:Required
	SiteConfig []WindowsWebAppSlotSiteConfigParameters `json:"siteConfig" tf:"site_config,omitempty"`

	// One or more storage_account blocks as defined below.
	// +kubebuilder:validation:Optional
	StorageAccount []WindowsWebAppSlotStorageAccountParameters `json:"storageAccount,omitempty" tf:"storage_account,omitempty"`

	// A mapping of tags which should be assigned to the Windows Web App Slot.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The subnet id which will be used by this Web App Slot for regional virtual network integration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id,omitempty"`

	// Reference to a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDRef *v1.Reference `json:"virtualNetworkSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDSelector *v1.Selector `json:"virtualNetworkSubnetIdSelector,omitempty" tf:"-"`

	// The local path and filename of the Zip packaged application to deploy to this Windows Web App.
	// The local path and filename of the Zip packaged application to deploy to this Windows Web App. **Note:** Using this value requires `WEBSITE_RUN_FROM_PACKAGE=1` on the App in `app_settings`.
	// +kubebuilder:validation:Optional
	ZipDeployFile *string `json:"zipDeployFile,omitempty" tf:"zip_deploy_file,omitempty"`
}

type WindowsWebAppSlotSiteConfigApplicationStackObservation struct {
}

type WindowsWebAppSlotSiteConfigApplicationStackParameters struct {

	// The Application Stack for the Windows Web App. Possible values include dotnet, dotnetcore, node, python, php, and java.
	// +kubebuilder:validation:Optional
	CurrentStack *string `json:"currentStack,omitempty" tf:"current_stack,omitempty"`

	// The name of the Docker Container. For example azure-app-service/samples/aspnethelloworld
	// +kubebuilder:validation:Optional
	DockerContainerName *string `json:"dockerContainerName,omitempty" tf:"docker_container_name,omitempty"`

	// The registry Host on which the specified Docker Container can be located. For example mcr.microsoft.com
	// +kubebuilder:validation:Optional
	DockerContainerRegistry *string `json:"dockerContainerRegistry,omitempty" tf:"docker_container_registry,omitempty"`

	// The Image Tag of the specified Docker Container to use. For example latest
	// +kubebuilder:validation:Optional
	DockerContainerTag *string `json:"dockerContainerTag,omitempty" tf:"docker_container_tag,omitempty"`

	// The version of .NET to use when current_stack is set to dotnetcore. Possible values include v4.0.
	// The version of DotNetCore to use.
	// +kubebuilder:validation:Optional
	DotnetCoreVersion *string `json:"dotnetCoreVersion,omitempty" tf:"dotnet_core_version,omitempty"`

	// The version of .NET to use when current_stack is set to dotnet. Possible values include v2.0,v3.0, v4.0, v5.0, v6.0 and v7.0.
	// +kubebuilder:validation:Optional
	DotnetVersion *string `json:"dotnetVersion,omitempty" tf:"dotnet_version,omitempty"`

	// +kubebuilder:validation:Optional
	JavaContainer *string `json:"javaContainer,omitempty" tf:"java_container,omitempty"`

	// +kubebuilder:validation:Optional
	JavaContainerVersion *string `json:"javaContainerVersion,omitempty" tf:"java_container_version,omitempty"`

	// Should the Java Embedded Server (Java SE) be used to run the app.
	// Should the application use the embedded web server for the version of Java in use.
	// +kubebuilder:validation:Optional
	JavaEmbeddedServerEnabled *bool `json:"javaEmbeddedServerEnabled,omitempty" tf:"java_embedded_server_enabled,omitempty"`

	// The version of Java to use when current_stack is set to java. Possible values include 1.7, 1.8, 11 and 17. Required with java_container and java_container_version.
	// +kubebuilder:validation:Optional
	JavaVersion *string `json:"javaVersion,omitempty" tf:"java_version,omitempty"`

	// The version of node to use when current_stack is set to node. Possible values include ~12, ~14, ~16, and ~18.
	// +kubebuilder:validation:Optional
	NodeVersion *string `json:"nodeVersion,omitempty" tf:"node_version,omitempty"`

	// The version of PHP to use when current_stack is set to php. Possible values are 7.1, 7.4 and Off.
	// +kubebuilder:validation:Optional
	PHPVersion *string `json:"phpVersion,omitempty" tf:"php_version,omitempty"`

	// The app is a Python app. Defaults to false.
	// +kubebuilder:validation:Optional
	Python *bool `json:"python,omitempty" tf:"python,omitempty"`

	// +kubebuilder:validation:Optional
	PythonVersion *string `json:"pythonVersion,omitempty" tf:"python_version,omitempty"`

	// The version of Tomcat the Java App should use.
	// +kubebuilder:validation:Optional
	TomcatVersion *string `json:"tomcatVersion,omitempty" tf:"tomcat_version,omitempty"`
}

type WindowsWebAppSlotSiteConfigAutoHealSettingActionObservation struct {
}

type WindowsWebAppSlotSiteConfigAutoHealSettingActionParameters struct {

	// Predefined action to be taken to an Auto Heal trigger. Possible values are CustomAction, LogEvent and Recycle.
	// +kubebuilder:validation:Required
	ActionType *string `json:"actionType" tf:"action_type,omitempty"`

	// A custom_action block as defined below.
	// +kubebuilder:validation:Optional
	CustomAction []ActionCustomActionParameters `json:"customAction,omitempty" tf:"custom_action,omitempty"`

	// The minimum amount of time in hh:mm:ss the Windows Web App Slot must have been running before the defined action will be run in the event of a trigger.
	// +kubebuilder:validation:Optional
	MinimumProcessExecutionTime *string `json:"minimumProcessExecutionTime,omitempty" tf:"minimum_process_execution_time,omitempty"`
}

type WindowsWebAppSlotSiteConfigAutoHealSettingObservation struct {
}

type WindowsWebAppSlotSiteConfigAutoHealSettingParameters struct {

	// The action to take. Possible values are Allow or Deny.
	// +kubebuilder:validation:Required
	Action []WindowsWebAppSlotSiteConfigAutoHealSettingActionParameters `json:"action" tf:"action,omitempty"`

	// A trigger block as defined below.
	// +kubebuilder:validation:Required
	Trigger []WindowsWebAppSlotSiteConfigAutoHealSettingTriggerParameters `json:"trigger" tf:"trigger,omitempty"`
}

type WindowsWebAppSlotSiteConfigAutoHealSettingTriggerObservation struct {
}

type WindowsWebAppSlotSiteConfigAutoHealSettingTriggerParameters struct {

	// The amount of Private Memory to be consumed for this rule to trigger. Possible values are between 102400 and 13631488.
	// +kubebuilder:validation:Optional
	PrivateMemoryKb *float64 `json:"privateMemoryKb,omitempty" tf:"private_memory_kb,omitempty"`

	// A requests block as defined above.
	// +kubebuilder:validation:Optional
	Requests []SiteConfigAutoHealSettingTriggerRequestsParameters `json:"requests,omitempty" tf:"requests,omitempty"`

	// One or more slow_request blocks as defined above.
	// +kubebuilder:validation:Optional
	SlowRequest []SiteConfigAutoHealSettingTriggerSlowRequestParameters `json:"slowRequest,omitempty" tf:"slow_request,omitempty"`

	// One or more status_code blocks as defined above.
	// +kubebuilder:validation:Optional
	StatusCode []SiteConfigAutoHealSettingTriggerStatusCodeParameters `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type WindowsWebAppSlotSiteConfigCorsObservation struct {
}

type WindowsWebAppSlotSiteConfigCorsParameters struct {

	// Specifies a list of origins that should be allowed to make cross-origin calls.
	// Specifies a list of origins that should be allowed to make cross-origin calls.
	// +kubebuilder:validation:Required
	AllowedOrigins []*string `json:"allowedOrigins" tf:"allowed_origins,omitempty"`

	// Whether CORS requests with credentials are allowed. Defaults to false
	// Are credentials allowed in CORS requests? Defaults to `false`.
	// +kubebuilder:validation:Optional
	SupportCredentials *bool `json:"supportCredentials,omitempty" tf:"support_credentials,omitempty"`
}

type WindowsWebAppSlotSiteConfigIPRestrictionHeadersObservation struct {
}

type WindowsWebAppSlotSiteConfigIPRestrictionHeadersParameters struct {

	// Specifies a list of Azure Front Door IDs.
	// +kubebuilder:validation:Optional
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	// +kubebuilder:validation:Optional
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	// +kubebuilder:validation:Optional
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// Specifies a list of Hosts for which matching should be applied.
	// +kubebuilder:validation:Optional
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type WindowsWebAppSlotSiteConfigIPRestrictionObservation struct {
}

type WindowsWebAppSlotSiteConfigIPRestrictionParameters struct {

	// The action to take. Possible values are Allow or Deny.
	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action"`

	// A headers block as defined above.
	// +kubebuilder:validation:Optional
	Headers []WindowsWebAppSlotSiteConfigIPRestrictionHeadersParameters `json:"headers,omitempty" tf:"headers"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`

	// The name which should be used for this Storage Account.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority"`

	// The Service Tag used for this IP Restriction.
	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`

	// The subnet id which will be used by this Web App Slot for regional virtual network integration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id"`

	// Reference to a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDRef *v1.Reference `json:"virtualNetworkSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDSelector *v1.Selector `json:"virtualNetworkSubnetIdSelector,omitempty" tf:"-"`
}

type WindowsWebAppSlotSiteConfigObservation struct {

	// Should the Windows Web App Slot be enabled? Defaults to true.
	DetailedErrorLoggingEnabled *bool `json:"detailedErrorLoggingEnabled,omitempty" tf:"detailed_error_logging_enabled,omitempty"`

	ScmType *string `json:"scmType,omitempty" tf:"scm_type,omitempty"`

	WindowsFxVersion *string `json:"windowsFxVersion,omitempty" tf:"windows_fx_version,omitempty"`
}

type WindowsWebAppSlotSiteConfigParameters struct {

	// The URL to the API Definition for this Windows Web App Slot.
	// +kubebuilder:validation:Optional
	APIDefinitionURL *string `json:"apiDefinitionUrl,omitempty" tf:"api_definition_url,omitempty"`

	// The API Management API ID this Windows Web App Slot os associated with.
	// +kubebuilder:validation:Optional
	APIManagementAPIID *string `json:"apiManagementApiId,omitempty" tf:"api_management_api_id,omitempty"`

	// If this Windows Web App Slot is Always On enabled. Defaults to true.
	// +kubebuilder:validation:Optional
	AlwaysOn *bool `json:"alwaysOn,omitempty" tf:"always_on,omitempty"`

	// The App command line to launch.
	// +kubebuilder:validation:Optional
	AppCommandLine *string `json:"appCommandLine,omitempty" tf:"app_command_line,omitempty"`

	// A application_stack block as defined above.
	// +kubebuilder:validation:Optional
	ApplicationStack []WindowsWebAppSlotSiteConfigApplicationStackParameters `json:"applicationStack,omitempty" tf:"application_stack,omitempty"`

	// Should Auto heal rules be enabled. Required with auto_heal_setting.
	// +kubebuilder:validation:Optional
	AutoHealEnabled *bool `json:"autoHealEnabled,omitempty" tf:"auto_heal_enabled,omitempty"`

	// A auto_heal_setting block as defined above. Required with auto_heal.
	// +kubebuilder:validation:Optional
	AutoHealSetting []WindowsWebAppSlotSiteConfigAutoHealSettingParameters `json:"autoHealSetting,omitempty" tf:"auto_heal_setting,omitempty"`

	// The Windows Web App Slot Name to automatically swap to when deployment to that slot is successfully completed.
	// +kubebuilder:validation:Optional
	AutoSwapSlotName *string `json:"autoSwapSlotName,omitempty" tf:"auto_swap_slot_name,omitempty"`

	// The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
	// +kubebuilder:validation:Optional
	ContainerRegistryManagedIdentityClientID *string `json:"containerRegistryManagedIdentityClientId,omitempty" tf:"container_registry_managed_identity_client_id,omitempty"`

	// Should connections for Azure Container Registry use Managed Identity.
	// +kubebuilder:validation:Optional
	ContainerRegistryUseManagedIdentity *bool `json:"containerRegistryUseManagedIdentity,omitempty" tf:"container_registry_use_managed_identity,omitempty"`

	// A cors block as defined above.
	// +kubebuilder:validation:Optional
	Cors []WindowsWebAppSlotSiteConfigCorsParameters `json:"cors,omitempty" tf:"cors,omitempty"`

	// Specifies a list of Default Documents for the Windows Web App Slot.
	// +kubebuilder:validation:Optional
	DefaultDocuments []*string `json:"defaultDocuments,omitempty" tf:"default_documents,omitempty"`

	// The State of FTP / FTPS service. Possible values include: AllAllowed, FtpsOnly, Disabled.
	// +kubebuilder:validation:Optional
	FtpsState *string `json:"ftpsState,omitempty" tf:"ftps_state,omitempty"`

	// The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.
	// The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`
	// +kubebuilder:validation:Optional
	HealthCheckEvictionTimeInMin *float64 `json:"healthCheckEvictionTimeInMin,omitempty" tf:"health_check_eviction_time_in_min,omitempty"`

	// The path to the Health Check.
	// +kubebuilder:validation:Optional
	HealthCheckPath *string `json:"healthCheckPath,omitempty" tf:"health_check_path,omitempty"`

	// Should the HTTP2 be enabled?
	// +kubebuilder:validation:Optional
	Http2Enabled *bool `json:"http2Enabled,omitempty" tf:"http2_enabled,omitempty"`

	// One or more ip_restriction blocks as defined above.
	// +kubebuilder:validation:Optional
	IPRestriction []WindowsWebAppSlotSiteConfigIPRestrictionParameters `json:"ipRestriction,omitempty" tf:"ip_restriction,omitempty"`

	// The Site load balancing. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.
	// +kubebuilder:validation:Optional
	LoadBalancingMode *string `json:"loadBalancingMode,omitempty" tf:"load_balancing_mode,omitempty"`

	// Use Local MySQL. Defaults to false.
	// +kubebuilder:validation:Optional
	LocalMySQLEnabled *bool `json:"localMysqlEnabled,omitempty" tf:"local_mysql_enabled,omitempty"`

	// Managed pipeline mode. Possible values include: Integrated, Classic.
	// +kubebuilder:validation:Optional
	ManagedPipelineMode *string `json:"managedPipelineMode,omitempty" tf:"managed_pipeline_mode,omitempty"`

	// The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// +kubebuilder:validation:Optional
	MinimumTLSVersion *string `json:"minimumTlsVersion,omitempty" tf:"minimum_tls_version,omitempty"`

	// Should Remote Debugging be enabled. Defaults to false.
	// +kubebuilder:validation:Optional
	RemoteDebuggingEnabled *bool `json:"remoteDebuggingEnabled,omitempty" tf:"remote_debugging_enabled,omitempty"`

	// The Remote Debugging Version. Possible values include VS2017 and VS2019
	// +kubebuilder:validation:Optional
	RemoteDebuggingVersion *string `json:"remoteDebuggingVersion,omitempty" tf:"remote_debugging_version,omitempty"`

	// One or more scm_ip_restriction blocks as defined above.
	// +kubebuilder:validation:Optional
	ScmIPRestriction []WindowsWebAppSlotSiteConfigScmIPRestrictionParameters `json:"scmIpRestriction,omitempty" tf:"scm_ip_restriction,omitempty"`

	// The configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.
	// +kubebuilder:validation:Optional
	ScmMinimumTLSVersion *string `json:"scmMinimumTlsVersion,omitempty" tf:"scm_minimum_tls_version,omitempty"`

	// Should the Windows Web App Slot ip_restriction configuration be used for the SCM also.
	// +kubebuilder:validation:Optional
	ScmUseMainIPRestriction *bool `json:"scmUseMainIpRestriction,omitempty" tf:"scm_use_main_ip_restriction,omitempty"`

	// Should the Windows Web App Slotuse a 32-bit worker. Defaults to true.
	// +kubebuilder:validation:Optional
	Use32BitWorker *bool `json:"use32BitWorker,omitempty" tf:"use_32_bit_worker,omitempty"`

	// One or more virtual_application blocks as defined below.
	// +kubebuilder:validation:Optional
	VirtualApplication []SiteConfigVirtualApplicationParameters `json:"virtualApplication,omitempty" tf:"virtual_application,omitempty"`

	// Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.
	// Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
	// +kubebuilder:validation:Optional
	VnetRouteAllEnabled *bool `json:"vnetRouteAllEnabled,omitempty" tf:"vnet_route_all_enabled,omitempty"`

	// Should the Windows Web App Slot be enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	WebsocketsEnabled *bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled,omitempty"`

	// The number of Workers for this Windows App Service Slot.
	// +kubebuilder:validation:Optional
	WorkerCount *float64 `json:"workerCount,omitempty" tf:"worker_count,omitempty"`
}

type WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersObservation struct {
}

type WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersParameters struct {

	// Specifies a list of Azure Front Door IDs.
	// +kubebuilder:validation:Optional
	XAzureFdid []*string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// Specifies if a Front Door Health Probe should be expected. The only possible value is 1.
	// +kubebuilder:validation:Optional
	XFdHealthProbe []*string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.
	// +kubebuilder:validation:Optional
	XForwardedFor []*string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// Specifies a list of Hosts for which matching should be applied.
	// +kubebuilder:validation:Optional
	XForwardedHost []*string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type WindowsWebAppSlotSiteConfigScmIPRestrictionObservation struct {
}

type WindowsWebAppSlotSiteConfigScmIPRestrictionParameters struct {

	// The action to take. Possible values are Allow or Deny.
	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action"`

	// A headers block as defined above.
	// +kubebuilder:validation:Optional
	Headers []WindowsWebAppSlotSiteConfigScmIPRestrictionHeadersParameters `json:"headers,omitempty" tf:"headers"`

	// The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`

	// The name which should be used for this Storage Account.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name"`

	// The priority value of this ip_restriction. Defaults to 65000.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority"`

	// The Service Tag used for this IP Restriction.
	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`

	// The subnet id which will be used by this Web App Slot for regional virtual network integration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id"`

	// Reference to a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDRef *v1.Reference `json:"virtualNetworkSubnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in network to populate virtualNetworkSubnetId.
	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIDSelector *v1.Selector `json:"virtualNetworkSubnetIdSelector,omitempty" tf:"-"`
}

type WindowsWebAppSlotSiteCredentialObservation struct {

	// The Site Credentials Username used for publishing.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The Site Credentials Password used for publishing.
	Password *string `json:"password,omitempty" tf:"password,omitempty"`
}

type WindowsWebAppSlotSiteCredentialParameters struct {
}

type WindowsWebAppSlotStorageAccountObservation struct {
}

type WindowsWebAppSlotStorageAccountParameters struct {

	// The Access key for the storage account.
	// +kubebuilder:validation:Required
	AccessKeySecretRef v1.SecretKeySelector `json:"accessKeySecretRef" tf:"-"`

	// The Name of the Storage Account.
	// +kubebuilder:validation:Required
	AccountName *string `json:"accountName" tf:"account_name,omitempty"`

	// The path at which to mount the storage share.
	// +kubebuilder:validation:Optional
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path,omitempty"`

	// The name which should be used for this Storage Account.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The Name of the File Share or Container Name for Blob storage.
	// +kubebuilder:validation:Required
	ShareName *string `json:"shareName" tf:"share_name,omitempty"`

	// The Azure Storage Type. Possible values include AzureFiles and AzureBlob
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// WindowsWebAppSlotSpec defines the desired state of WindowsWebAppSlot
type WindowsWebAppSlotSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WindowsWebAppSlotParameters `json:"forProvider"`
}

// WindowsWebAppSlotStatus defines the observed state of WindowsWebAppSlot.
type WindowsWebAppSlotStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WindowsWebAppSlotObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WindowsWebAppSlot is the Schema for the WindowsWebAppSlots API. Manages a Windows Web App Slot.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type WindowsWebAppSlot struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WindowsWebAppSlotSpec   `json:"spec"`
	Status            WindowsWebAppSlotStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WindowsWebAppSlotList contains a list of WindowsWebAppSlots
type WindowsWebAppSlotList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WindowsWebAppSlot `json:"items"`
}

// Repository type metadata.
var (
	WindowsWebAppSlot_Kind             = "WindowsWebAppSlot"
	WindowsWebAppSlot_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WindowsWebAppSlot_Kind}.String()
	WindowsWebAppSlot_KindAPIVersion   = WindowsWebAppSlot_Kind + "." + CRDGroupVersion.String()
	WindowsWebAppSlot_GroupVersionKind = CRDGroupVersion.WithKind(WindowsWebAppSlot_Kind)
)

func init() {
	SchemeBuilder.Register(&WindowsWebAppSlot{}, &WindowsWebAppSlotList{})
}
